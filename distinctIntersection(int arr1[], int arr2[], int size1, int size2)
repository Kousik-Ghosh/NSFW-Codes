void distinctIntersection(int arr1[], int arr2[], int size1, int size2){
    unordered_set <int> s1(arr1,arr1+size1);
    unordered_set <int> s2(arr2,arr2+size2);
    unordered_map <int,int> m;
    int count = 0;

    for (auto i = s1.begin(); i != s1.end(); ++i)
    {
        m[*i]++;
    }
    for (auto j = s2.begin(); j != s2.end(); ++j)
    {
        m[*j]++;
    }

    for (auto k = m.begin(); k != m.end(); ++k)
    {
        if(k->second == 2)
            count++;
    }
    cout<<count;
}

void driver(){
    int arr1[] = {10,15,20,5,30};
    int arr2[] = {30,5,30,80};
    intersection(arr1,arr2,sizeof(arr1)/sizeof(arr1[0]),sizeof(arr2)/sizeof(arr2[0]));
}
